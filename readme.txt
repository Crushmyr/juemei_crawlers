## 0x00 需求

Python写个爬虫把http://www.juemei.com/mm/上的美女图片爬下来，我们把这个爬虫项目命名为：mm_crawler。

需满足：
1. 不要把非相关的图片也爬了；
2. 你总该考虑多线程吧？或者协程；
3. 命令行-h可以查看程序运行帮助，-n可以指定并发线程数（默认10个），-o可以指定图片存储在哪个目录（默认当前运行目录的pics目录下），-l可以限制爬多少图片就结束（默认不限制）；
4. 思考个问题，如果下次我要爬其他的美女网站，你这个程序如何尽可能利于复用；
5. 把你的实现思路清晰记录在该爬虫项目的目录下：readme.txt；
6. 你可以用Python内置模块与第三方模块来加速你这个任务；
7. 两周内搞定


## 0x01 第一天(17.11.28)

整理了一些思路，读了一遍docopt的官方文档，学习了 docopt 命令行参数解释器的简单使用方法。

然后写出了这个爬虫所需的命令行参数解释器。

emmm，一晚上就整那么多吧～


## 0x02 第二天（17.11.29）

今天实现了单线程完成任务
主要就是正则表达式的使用，
网页上需要爬取的网址的正则表达式为  /mm/[^"\']+
图片的话，只考虑大图，正则表达式为 http://img\.juemei\.com/\w+/\d{4}-\d{2}-\d{2}/\w{13}\.jpg

其中，因为该网站的图片是放在了一种有规律的网址（e.g http://www.juemei.com/mm/201711/13392.html），
可以把这种网址单独拿出来，遍历爬取时不考虑这些网址，然后下载图片时只从这些网址中选取图片，
这样的话，效率就大大的提升了，

但是又考虑到了复用性，所以没有采取这种做法
而是使用了一般的方法，即遍历爬取网址，然后遍历下载图片。


## 0x03 第三天（17.11.30）

参考别人的线程池爬虫，然后基本成功把单线程转换成了线程池

线程池的话，把要爬取的网址和要下载的图片都放进里面了，区别是，两者所对应的函数不同，
也就是把单线程里的那两个函数稍微修改修改，然后放到下载图片类里了，
当从线程池中取出一个线程时，根据该线程所对应函数的不同，分别给予不同的方法，

考虑到复用性，把几个关键的常量单独拿了出来，放到了 config.py 文件中

碰见的问题：
* 当限制下载数时，由于多线程的存在，很容易超出限制数，比如说，当达到限制条件时，还有几个线程正在下载图片，这时就出现超出限制下载数的情况


## 0x04 第四天（17.12.01）

玩了一天，什么都没干，，，

不过，感觉，这个爬虫也没什么好加的了，，
emmm，就这样了？
